---
version: '2'
services:

  teleappbot:
    image: teleappbot
    container_name: teleappbot
    build:
      context: TeleAppBot
      dockerfile: Dockerfile
    depends_on:
      - teleappbotapi
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
  
  teleappbotapi:
    image: teleappbotapi
    container_name: teleappbotapi
    build:
      context: TeleAppBotApi
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
      MONGO_CONNECTION: ${MONGO_CONNECTION}
      KAFKA_USER: ${KAFKA_USER}
      KAFKA_PASSWORD: ${KAFKA_PASSWORD}

  workerenviarmensagem:
    image: workerenviarmensagem
    container_name: workerenviarmensagem
    build:
      context: TeleAppBotApi
      dockerfile: TeleAppBot.WorkerEnviarMensagem/Dockerfile
    depends_on:
      - kafka
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
      MONGO_CONNECTION: ${MONGO_CONNECTION}
      KAFKA_USER: ${KAFKA_USER}
      KAFKA_PASSWORD: ${KAFKA_PASSWORD}

  workerenviarmidia:
    image: workerenviarmidia
    container_name: workerenviarmidia
    build:
      context: TeleAppBotApi
      dockerfile: TeleAppBot.WorkerEnviarMidia/Dockerfile
    depends_on:
      - kafka
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
      MONGO_CONNECTION: ${MONGO_CONNECTION}
      KAFKA_USER: ${KAFKA_USER}
      KAFKA_PASSWORD: ${KAFKA_PASSWORD}

  reverseproxy:
    build: ./nginx
    container_name: reverseproxy
    ports:
      - "3333:80"
    depends_on:
      - teleappbotapi
  
networks:
  default:
    driver: bridge